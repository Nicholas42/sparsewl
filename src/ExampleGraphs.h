/**********************************************************************
 * Copyright (C) 2017 Christopher Morris <christopher.morris@udo.edu>
 *********************************************************************/

#ifndef GLOCAL_NEW_EXAMPLEGRAPHS_H
#define GLOCAL_NEW_EXAMPLEGRAPHS_H

#include "Graph.h"

using namespace GraphLibrary;


namespace Examples {
    // Gaurav's graphs.
    Labels labels_gaurav_0{
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            2,
            14,
            15,
            14,
            4,
            2,
            5,
            16,
            14,
            10,
            4,
            17,
            12,
            15,
            18,
            15,
            4,
            19,
            15,
            18,
            1,
            2,
            14,
            16,
            16,
            20,
            5,
            3,
            6,
            20,
            9,
            17,
            7,
            21,
            11,
            16,
            8,
            13,
            19,
            21,
            5};

    Labels labels_gaurav_1{
            7,
            1,
            2,
            7,
            18,
            6,
            9,
            10,
            16,
            12,
            5,
            13,
            5,
            16,
            14,
            11,
            16,
            11,
            3,
            10,
            8,
            17,
            12,
            4,
            19,
            15,
            14,
            2,
            2,
            16,
            1,
            15,
            21,
            20,
            4,
            18,
            3,
            8,
            19,
            20,
            6,
            21,
            9,
            17,
            15,
            14,
            5,
            5,
            4,
            2,
            13,
            4,
            14,
            15
    };


    EdgeList list_gaurav_0 = {
            Edge(0, 26),
            Edge(0, 6),
            Edge(0, 31),
            Edge(1, 40),
            Edge(1, 5),
            Edge(1, 47),
            Edge(2, 18),
            Edge(2, 34),
            Edge(2, 29),
            Edge(2, 23),
            Edge(3, 40),
            Edge(3, 8),
            Edge(3, 5),
            Edge(4, 9),
            Edge(4, 12),
            Edge(4, 44),
            Edge(5, 18),
            Edge(5, 29),
            Edge(6, 47),
            Edge(7, 32),
            Edge(7, 25),
            Edge(8, 30),
            Edge(8, 23),
            Edge(9, 20),
            Edge(9, 19),
            Edge(9, 36),
            Edge(10, 18),
            Edge(10, 45),
            Edge(10, 13),
            Edge(11, 49),
            Edge(11, 20),
            Edge(11, 37),
            Edge(12, 30),
            Edge(12, 39),
            Edge(13, 40),
            Edge(13, 41),
            Edge(14, 32),
            Edge(14, 42),
            Edge(14, 46),
            Edge(15, 33),
            Edge(15, 52),
            Edge(15, 38),
            Edge(16, 42),
            Edge(16, 27),
            Edge(16, 52),
            Edge(17, 40),
            Edge(17, 41),
            Edge(17, 43),
            Edge(19, 24),
            Edge(19, 50),
            Edge(20, 44),
            Edge(21, 32),
            Edge(21, 52),
            Edge(21, 38),
            Edge(22, 48),
            Edge(22, 53),
            Edge(22, 37),
            Edge(22, 39),
            Edge(23, 41),
            Edge(24, 36),
            Edge(24, 37),
            Edge(24, 39),
            Edge(25, 48),
            Edge(25, 36),
            Edge(26, 42),
            Edge(26, 52),
            Edge(27, 49),
            Edge(27, 35),
            Edge(28, 33),
            Edge(28, 42),
            Edge(28, 46),
            Edge(29, 43),
            Edge(31, 38),
            Edge(31, 46),
            Edge(33, 45),
            Edge(34, 41),
            Edge(34, 47),
            Edge(35, 38),
            Edge(35, 46),
            Edge(43, 51),
            Edge(44, 48),
            Edge(44, 53),
            Edge(50, 51),
            Edge(50, 53)
    };

    EdgeList list_gaurav_1 = {
            Edge(0, 17),
            Edge(0, 30),
            Edge(1, 3),
            Edge(1, 53),
            Edge(1, 31),
            Edge(2, 18),
            Edge(2, 5),
            Edge(2, 15),
            Edge(3, 15),
            Edge(4, 20),
            Edge(4, 52),
            Edge(4, 45),
            Edge(5, 48),
            Edge(5, 51),
            Edge(5, 28),
            Edge(6, 51),
            Edge(6, 38),
            Edge(6, 23),
            Edge(7, 8),
            Edge(7, 10),
            Edge(7, 12),
            Edge(7, 13),
            Edge(8, 43),
            Edge(8, 22),
            Edge(9, 37),
            Edge(9, 13),
            Edge(9, 29),
            Edge(10, 50),
            Edge(10, 43),
            Edge(11, 24),
            Edge(11, 12),
            Edge(11, 47),
            Edge(12, 21),
            Edge(13, 21),
            Edge(14, 32),
            Edge(14, 35),
            Edge(14, 39),
            Edge(15, 49),
            Edge(16, 19),
            Edge(16, 21),
            Edge(16, 22),
            Edge(17, 27),
            Edge(17, 28),
            Edge(18, 48),
            Edge(18, 27),
            Edge(18, 23),
            Edge(19, 29),
            Edge(19, 46),
            Edge(19, 47),
            Edge(20, 22),
            Edge(21, 46),
            Edge(23, 40),
            Edge(24, 42),
            Edge(25, 41),
            Edge(25, 30),
            Edge(25, 33),
            Edge(26, 41),
            Edge(26, 35),
            Edge(26, 33),
            Edge(27, 40),
            Edge(28, 36),
            Edge(29, 43),
            Edge(30, 44),
            Edge(31, 39),
            Edge(31, 41),
            Edge(32, 44),
            Edge(32, 45),
            Edge(32, 53),
            Edge(33, 45),
            Edge(33, 53),
            Edge(34, 40),
            Edge(34, 42),
            Edge(34, 36),
            Edge(35, 37),
            Edge(36, 49),
            Edge(36, 51),
            Edge(38, 50),
            Edge(39, 44),
            Edge(39, 52),
            Edge(40, 49),
            Edge(41, 52),
            Edge(42, 48),
            Edge(43, 47),
            Edge(46, 50)
    };

    // Two 3-cycles and 6 cycle.
    EdgeList list_cycle_0 = {
            Edge(0, 1),
            Edge(1, 2),
            Edge(2, 0),
            Edge(3, 4),
            Edge(4, 5),
            Edge(5, 3)
    };

    EdgeList list_cycle_1 = {
            Edge(0, 1),
            Edge(1, 2),
            Edge(2, 3),
            Edge(3, 4),
            Edge(4, 5),
            Edge(5, 0)
    };

    // CFI graphs for k=3.
    EdgeList list_cfi_0 = {
            Edge(0, 4),
            Edge(0, 6),
            Edge(0, 9),
            Edge(1, 5),
            Edge(1, 7),
            Edge(1, 9),
            Edge(2, 4),
            Edge(2, 7),
            Edge(2, 8),
            Edge(3, 5),
            Edge(3, 6),
            Edge(3, 8),
            Edge(4, 20),
            Edge(5, 21),
            Edge(6, 10),
            Edge(7, 11),
            Edge(8, 30),
            Edge(9, 31),
            Edge(10, 12),
            Edge(10, 15),
            Edge(11, 13),
            Edge(11, 14),
            Edge(12, 18),
            Edge(12, 17),
            Edge(13, 16),
            Edge(13, 17),
            Edge(14, 18),
            Edge(14, 19),
            Edge(15, 16),
            Edge(15, 19),
            Edge(16, 23),
            Edge(17, 32),
            Edge(18, 25),
            Edge(19, 34),
            Edge(20, 24),
            Edge(20, 28),
            Edge(21, 22),
            Edge(21, 26),
            Edge(23, 24),
            Edge(23, 26),
            Edge(25, 22),
            Edge(25, 28),
            Edge(27, 22),
            Edge(27, 24),
            Edge(29, 26),
            Edge(29, 28),
            Edge(31, 33),
            Edge(31, 36),
            Edge(30, 37),
            Edge(30, 39),
            Edge(32, 33),
            Edge(32, 39),
            Edge(34, 37),
            Edge(34, 35),
            Edge(36, 37),
            Edge(36, 39),
            Edge(38, 33),
            Edge(38, 35),
            Edge(27, 36),
            Edge(29, 28),
            Edge(29, 26),
            Edge(29, 38)
    };

    EdgeList list_cfi_1 = {
            Edge(0, 4),
            Edge(0, 6),
            Edge(0, 9),
            Edge(1, 5),
            Edge(1, 7),
            Edge(1, 9),
            Edge(2, 4),
            Edge(2, 7),
            Edge(2, 8),
            Edge(3, 5),
            Edge(3, 6),
            Edge(3, 8),
            Edge(4, 20),
            Edge(5, 21),
            Edge(6, 11),
            Edge(7, 10),
            Edge(8, 30),
            Edge(9, 31),
            Edge(10, 12),
            Edge(10, 15),
            Edge(11, 13),
            Edge(11, 14),
            Edge(12, 18),
            Edge(12, 17),
            Edge(13, 16),
            Edge(13, 17),
            Edge(14, 18),
            Edge(14, 19),
            Edge(15, 16),
            Edge(15, 19),
            Edge(16, 23),
            Edge(17, 32),
            Edge(18, 25),
            Edge(19, 34),
            Edge(20, 24),
            Edge(20, 28),
            Edge(21, 22),
            Edge(21, 26),
            Edge(23, 24),
            Edge(23, 26),
            Edge(25, 22),
            Edge(25, 28),
            Edge(27, 22),
            Edge(27, 24),
            Edge(29, 26),
            Edge(29, 28),
            Edge(31, 33),
            Edge(31, 36),
            Edge(30, 37),
            Edge(30, 39),
            Edge(32, 33),
            Edge(32, 39),
            Edge(34, 37),
            Edge(34, 35),
            Edge(36, 37),
            Edge(36, 39),
            Edge(38, 33),
            Edge(38, 35),
            Edge(27, 36),
            Edge(29, 28),
            Edge(29, 26),
            Edge(29, 38)
    };


    // Gaurav CFI graphs for k=2.
    EdgeList list_gaurav_cfi_2_0 = {
            Edge(0,1),
            Edge(0,6),
            Edge(0,8),
            Edge(1,7),
            Edge(1,9),
            Edge(2,3),
            Edge(2,6),
            Edge(2,10),
            Edge(3,7),
            Edge(3,11),
            Edge(4,5),
            Edge(4,8),
            Edge(4,10),
            Edge(5,9),
            Edge(5,11)
    };

    EdgeList list_gaurav_cfi_2_1 = {
            Edge(0,1),
            Edge(0,7),
            Edge(0,8),
            Edge(1,6),
            Edge(1,9),
            Edge(2,3),
            Edge(2,6),
            Edge(2,10),
            Edge(3,7),
            Edge(3,11),
            Edge(4,5),
            Edge(4,8),
            Edge(4,10),
            Edge(5,9),
            Edge(5,11)
    };


    // Gaurav CFI graphs for k=2.
    EdgeList list_gaurav_cfi_3_0 = {
            Edge(0,1),
            Edge(0,12),
            Edge(0,15),
            Edge(0,16),
            Edge(0,17),
            Edge(1,13),
            Edge(1,14),
            Edge(1,18),
            Edge(1,19),
            Edge(2,3),
            Edge(2,12),
            Edge(2,14),
            Edge(2,20),
            Edge(2,21),
            Edge(3,13),
            Edge(3,15),
            Edge(3,22),
            Edge(3,23),
            Edge(4,5),
            Edge(4,12),
            Edge(4,13),
            Edge(4,24),
            Edge(4,26),
            Edge(5,14),
            Edge(5,15),
            Edge(5,25),
            Edge(5,27),
            Edge(6,7),
            Edge(6,16),
            Edge(6,19),
            Edge(6,20),
            Edge(6,22),
            Edge(7,17),
            Edge(7,18),
            Edge(7,21),
            Edge(7,23),
            Edge(8,9),
            Edge(8,16),
            Edge(8,18),
            Edge(8,24),
            Edge(8,25),
            Edge(9,17),
            Edge(9,19),
            Edge(9,26),
            Edge(9,27),
            Edge(10,11),
            Edge(10,20),
            Edge(10,23),
            Edge(10,24),
            Edge(10,27),
            Edge(11,21),
            Edge(11,22),
            Edge(11,25),
            Edge(11,26)
    };

    EdgeList list_gaurav_cfi_3_1 = {
            Edge(0,1),
            Edge(0,13),
            Edge(0,15),
            Edge(0,16),
            Edge(0,17),
            Edge(1,12),
            Edge(1,14),
            Edge(1,18),
            Edge(1,19),
            Edge(2,3),
            Edge(2,13),
            Edge(2,14),
            Edge(2,20),
            Edge(2,21),
            Edge(3,12),
            Edge(3,15),
            Edge(3,22),
            Edge(3,23),
            Edge(4,5),
            Edge(4,14),
            Edge(4,15),
            Edge(4,24),
            Edge(4,26),
            Edge(5,12),
            Edge(5,13),
            Edge(5,25),
            Edge(5,27),
            Edge(6,7),
            Edge(6,16),
            Edge(6,19),
            Edge(6,20),
            Edge(6,22),
            Edge(7,17),
            Edge(7,18),
            Edge(7,21),
            Edge(7,23),
            Edge(8,9),
            Edge(8,16),
            Edge(8,18),
            Edge(8,24),
            Edge(8,25),
            Edge(9,17),
            Edge(9,19),
            Edge(9,26),
            Edge(9,27),
            Edge(10,11),
            Edge(10,20),
            Edge(10,23),
            Edge(10,24),
            Edge(10,27),
            Edge(11,21),
            Edge(11,22),
            Edge(11,25),
            Edge(11,26)
    };

    Labels labels_g{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,1,1,1,1};
    Graph gaurav_cfi_3_0(false, 28, list_gaurav_cfi_3_0, labels_g);
    Graph gaurav_cfi_3_1(false, 28, list_gaurav_cfi_3_1, labels_g);


    Graph gaurav_0(false, 54, list_gaurav_0, labels_gaurav_0);
    Graph gaurav_1(false, 54, list_gaurav_1, labels_gaurav_1);

    Labels labels_0{1, 1, 1, 1, 1, 1};
    Graph cycle_0(false, 6, list_cycle_0, labels_0);
    Graph cycle_1(false, 6, list_cycle_1, labels_0);

    Labels labels_1{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    Graph cfi_0(false, 40, list_cfi_0, labels_1);
    Graph cfi_1(false, 40, list_cfi_1, labels_1);
}

#endif //GLOCAL_NEW_EXAMPLEGRAPHS_H